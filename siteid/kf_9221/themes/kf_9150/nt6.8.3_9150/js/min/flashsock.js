!function(a){var b=function(){};a.MQTT=a.MQTT||{},a.MQTT.Message=function(a){this.payloadString=a,this.destinationName=void 0,this.pos=0},a.MQTT.flashSock={name:"flashSocket",debug:!0,flash:null,connectStatus:0,onConnectionLost:b,onMessageArrived:b,options:null,init:function(b,c,d,e){this._host=b,this._port=c,this._clientId=d,this._userName=e.userName,this._password=e.password,this.options=e,this.flash?this.isConnected()===!1&&this.connect():(this.debug&&a.Log("create flashsock",2),this.flash=this._createflash())},connect:function(){this.flash?(this.debug&&this.flash.setDebugMode(!0),3===this.connectStatus?(this.debug&&a.Log("flash.reStartConnect()",2),this.flash.reStartConnect()):(this.debug&&a.Log("flash.connect("+this._host+", "+this._port+", "+this._clientId+")",2),this.connectStatus=1,this.flash.connect(this._host,this._port,this._clientId,this._userName,this._password))):a.Log("this.flash not element",3)},reconnect:function(){this.flash?(this.debug&&a.Log("flash.reStartConnect()",2),this.connectStatus=1,this.flash.reStartConnect()):a.Log("this.flash not element, no reconnect",3)},subscribe:function(b,c){this.debug&&a.Log("flashsock.subscribe("+b+", 1, "+c.qos+")",1),this.flash?this.flash.subscribe(b,1,c.qos):a.Log("this.flash not element",3)},unsubscribe:function(b,c){if(c=a.merge({qos:1},c),this.debug&&a.Log("flashsock.unsubscribe("+b+", 1)",1),this.flash)try{this.flash.unsubscribe(b,1)}catch(d){a.Log(d,3)}else a.Log("this.flash not element",3)},send:function(b){this.debug&&a.Log("flashsock.publish("+b.destinationName+", "+b.payloadString+", "+b.qos+")",1),this.flash?this.flash.publish(b.destinationName,b.payloadString,b.qos):a.Log("this.flash not element",3)},connectionLost:function(a){this.connectStatus=3,this.onConnectionLost(a)},messageArrived:function(a){this.onMessageArrived(a)},isConnected:function(){return this.flash&&"function"==typeof this.flash.connect&&2===this.connectStatus},disconnect:function(){},startTrace:function(){this.flash&&a.flash.remove(this.flash)},stopTrace:function(){},clear:function(){},_createflash:function(){var b=a("#nTalk-flash-element"),c=a.sourceURI+"fs/TChatSocket.swf?"+a.version.flashsock,d=a.flashHtml("flashsock",c,{});return b.length||(b=a(document.body).insert('<div id="nTalk-flash-element" class="nTalk-hidden-element" style="position: absolute; z-index: 9996; top: -200px;"></div>')),b.find("#flashsock").length&&b.find("#flashsock").remove(),b.insert(d),a.browser.msie&&b.find("#flashsock").display(1),b.find("#flashsock").get(0)},onSuccess:function(){this.connectStatus=2,this.options.onSuccess()},onFailure:function(){this.connectStatus=3}},a.extend({fIM_flashSocketReady:function(){a.Log("fIM_flashSocketReady",1),setTimeout(function(){a.MQTT.flashSock.connect()},0)},fIM_notifyConnectStatus:function(b){var c=0===b?"DISCONNECT":1===b?"CONNECTING":"CONNECTED";a.Log("fIM_notifyConnectStatus:"+c+"("+b+")",1)},fIM_onConnected:function(b){a.Log("fIM_onConnected",1),setTimeout(function(){a.MQTT.flashSock.onSuccess(b)},0)},fIM_NotifyError:function(b,c){a.Log("fIM_NotifyError:"+b+", message:"+c,1),setTimeout(function(){a.MQTT.flashSock.connectionLost({errorCode:b,errorMessage:c})},0)},fIM_onPublish:function(b,c){c="string"==typeof c?c:a.JSON.toJSONString(c),a.Log("fIM_onPublish("+b+", "+c+")",1),setTimeout(function(){a.MQTT.flashSock.messageArrived({destinationName:b,payloadString:c})},0)}})}(nTalk);